{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/orchesratoer/","result":{"data":{"site":{"siteMetadata":{"title":"vita activa","author":"Hondoh Kenya","siteUrl":"https://kenmikanmi.github.io","comment":{"disqusShortName":"","utterances":"kenmikanmi/kenmikanmi.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"e82d22ba-c2e5-5399-94b7-b9cdc6a4d156","excerpt":"目次 オーケストレータって何をしてくれるの？ 1. 目的の状態の調整 2. レプリケートされたサービス、グローバルなサービス 3. サービス検出 4. ルーティング 5. 負荷分散 6. スケーリング 7. 自己復旧 8. ダウンタイムゼロのデプロイメント 9. アフィニティと位置認識 10. セキュリティ 11. ネットワークポリシー 12. ロールベースのアクセス制御（RBAC） 13. 機密情報 14. コンテンツの信頼性 1…","html":"<h2 id=\"目次\" style=\"position:relative;\"><a href=\"#%E7%9B%AE%E6%AC%A1\" aria-label=\"目次 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>目次</h2>\n<ul>\n<li>\n<p><a href=\"#%E3%82%AA%E3%83%BC%E3%82%B1%E3%82%B9%E3%83%88%E3%83%AC%E3%83%BC%E3%82%BF%E3%81%A3%E3%81%A6%E4%BD%95%E3%82%92%E3%81%97%E3%81%A6%E3%81%8F%E3%82%8C%E3%82%8B%E3%81%AE%EF%BC%9F\">オーケストレータって何をしてくれるの？</a></p>\n<ul>\n<li><a href=\"#1-%E7%9B%AE%E7%9A%84%E3%81%AE%E7%8A%B6%E6%85%8B%E3%81%AE%E8%AA%BF%E6%95%B4\">1. 目的の状態の調整</a></li>\n<li><a href=\"#2-%E3%83%AC%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%83%88%E3%81%95%E3%82%8C%E3%81%9F%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%80%81%E3%82%B0%E3%83%AD%E3%83%BC%E3%83%90%E3%83%AB%E3%81%AA%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9\">2. レプリケートされたサービス、グローバルなサービス</a></li>\n<li><a href=\"#3-%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E6%A4%9C%E5%87%BA\">3. サービス検出</a></li>\n<li><a href=\"#4-%E3%83%AB%E3%83%BC%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0\">4. ルーティング</a></li>\n<li><a href=\"#5-%E8%B2%A0%E8%8D%B7%E5%88%86%E6%95%A3\">5. 負荷分散</a></li>\n<li><a href=\"#6-%E3%82%B9%E3%82%B1%E3%83%BC%E3%83%AA%E3%83%B3%E3%82%B0\">6. スケーリング</a></li>\n<li><a href=\"#7-%E8%87%AA%E5%B7%B1%E5%BE%A9%E6%97%A7\">7. 自己復旧</a></li>\n<li><a href=\"#8-%E3%83%80%E3%82%A6%E3%83%B3%E3%82%BF%E3%82%A4%E3%83%A0%E3%82%BC%E3%83%AD%E3%81%AE%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4%E3%83%A1%E3%83%B3%E3%83%88\">8. ダウンタイムゼロのデプロイメント</a></li>\n<li><a href=\"#9-%E3%82%A2%E3%83%95%E3%82%A3%E3%83%8B%E3%83%86%E3%82%A3%E3%81%A8%E4%BD%8D%E7%BD%AE%E8%AA%8D%E8%AD%98\">9. アフィニティと位置認識</a></li>\n<li><a href=\"#10-%E3%82%BB%E3%82%AD%E3%83%A5%E3%83%AA%E3%83%86%E3%82%A3\">10. セキュリティ</a></li>\n<li><a href=\"#11-%E3%83%8D%E3%83%83%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF%E3%83%9D%E3%83%AA%E3%82%B7%E3%83%BC\">11. ネットワークポリシー</a></li>\n<li><a href=\"#12-%E3%83%AD%E3%83%BC%E3%83%AB%E3%83%99%E3%83%BC%E3%82%B9%E3%81%AE%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E5%88%B6%E5%BE%A1%EF%BC%88rbac%EF%BC%89\">12. ロールベースのアクセス制御（RBAC）</a></li>\n<li><a href=\"#13-%E6%A9%9F%E5%AF%86%E6%83%85%E5%A0%B1\">13. 機密情報</a></li>\n<li><a href=\"#14-%E3%82%B3%E3%83%B3%E3%83%86%E3%83%B3%E3%83%84%E3%81%AE%E4%BF%A1%E9%A0%BC%E6%80%A7\">14. コンテンツの信頼性</a></li>\n<li><a href=\"#15-%E3%82%A4%E3%83%B3%E3%83%88%E3%83%AD%E3%82%B9%E3%83%9A%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3\">15. イントロスペクション</a></li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>社で開発しているシステムがマイクロサービスアーキテクチャを採用しています。それならコンテナやオーケストレータの仕組みなどについては一通り勉強しておかねばならんだろうということで，電子書籍<a href=\"%08https://azure.microsoft.com/ja-jp/resources/containerize-your-apps-with-docker-and-kubernetes\">”Containerize Your Apps with Docker and Kubernetes”</a>を読んでいます</li>\n<li>第9章「オーケストレータ」で，「オーケストレータとはなんぞや」という話が記述されており面白かった</li>\n<li>お気持ち程度しか知らなかったコンテナのオーケストレーションについて，具体的に何をしてくれるのかちょっとブレイクダウンした内容をまとめてみます</li>\n</ul>\n<hr>\n<h1 id=\"オーケストレータって何をしてくれるの？\" style=\"position:relative;\"><a href=\"#%E3%82%AA%E3%83%BC%E3%82%B1%E3%82%B9%E3%83%88%E3%83%AC%E3%83%BC%E3%82%BF%E3%81%A3%E3%81%A6%E4%BD%95%E3%82%92%E3%81%97%E3%81%A6%E3%81%8F%E3%82%8C%E3%82%8B%E3%81%AE%EF%BC%9F\" aria-label=\"オーケストレータって何をしてくれるの？ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>オーケストレータって何をしてくれるの？</h1>\n<h2 id=\"1-目的の状態の調整\" style=\"position:relative;\"><a href=\"#1-%E7%9B%AE%E7%9A%84%E3%81%AE%E7%8A%B6%E6%85%8B%E3%81%AE%E8%AA%BF%E6%95%B4\" aria-label=\"1 目的の状態の調整 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 目的の状態の調整</h2>\n<p>サービスが「宣言された」通りの状態であるかを常に監視し、相違を検出すれば、その差を無くすように動作します。</p>\n<p>例として，k8sの設定ファイルを見てみます。以下では，<code class=\"language-text\">app: nginx</code>のポッド数（<code class=\"language-text\">replicas</code>）は<code class=\"language-text\">2</code>であることが求められています。</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1 <span class=\"token comment\"># for versions before 1.9.0 use apps/v1beta2</span>\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>deployment\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> nginx\n  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2 </span><span class=\"token comment\"># tells deployment to run 2 pods matching the template</span>\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> nginx\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx\n        <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span>1.7.9\n        <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span></code></pre></div>\n<p>しかし，ポッドの数は以下のような要因によって変動します：</p>\n<ul>\n<li>コンテナのクラッシュによる，ポッド数の不足</li>\n<li>スケールダウンによる、ポッド数の超過</li>\n</ul>\n<p>こうした変化に対して，オーケストレータは常にポッド数を監視して，宣言通りの状態にサービスを調整してくれます。</p>\n<h2 id=\"2-レプリケートされたサービス、グローバルなサービス\" style=\"position:relative;\"><a href=\"#2-%E3%83%AC%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%83%88%E3%81%95%E3%82%8C%E3%81%9F%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%80%81%E3%82%B0%E3%83%AD%E3%83%BC%E3%83%90%E3%83%AB%E3%81%AA%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9\" aria-label=\"2 レプリケートされたサービス、グローバルなサービス permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. レプリケートされたサービス、グローバルなサービス</h2>\n<ul>\n<li>\n<p>レプリケートされたサービス</p>\n<ul>\n<li>特定数のインスタンスで実行する必要があるサービス。例えば、ワーカーノード。</li>\n</ul>\n</li>\n<li>\n<p>グローバルなサービス</p>\n<ul>\n<li>クラスタに対して割り当てられるサービス。例えば、マスターノード。</li>\n<li>\n<blockquote>\n<p>Kubernetesでは、デーモンセットともいう。</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"3-サービス検出\" style=\"position:relative;\"><a href=\"#3-%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E6%A4%9C%E5%87%BA\" aria-label=\"3 サービス検出 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. サービス検出</h2>\n<p>サービスを宣言的に記述するだけで、オーケストレーターが、サービスを実行する最適なノードを選んでくれる。</p>\n<p>例えば、サービスAからサービスBに通信する場合、サービスAにBのインスタンスを指示しなくても、勝手に利用可能なBのインスタンスを検出し、通信をルーティングしてくれる。</p>\n<p>この機能を<strong>サービス検出</strong>という。</p>\n<h2 id=\"4-ルーティング\" style=\"position:relative;\"><a href=\"#4-%E3%83%AB%E3%83%BC%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0\" aria-label=\"4 ルーティング permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. ルーティング</h2>\n<p>サービスAからBへのルーティングが可能である。</p>\n<h2 id=\"5-負荷分散\" style=\"position:relative;\"><a href=\"#5-%E8%B2%A0%E8%8D%B7%E5%88%86%E6%95%A3\" aria-label=\"5 負荷分散 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 負荷分散</h2>\n<p>オーケストレータはロードバランサ―を持ち，ワークロードを分散させる。</p>\n<p>負荷分散には，例えばラウンドロビンアルゴリズムが用いられる。</p>\n<p>内部から内部へ、外部から内部へ、のいずれにおいてもオーケストレーターが適切に負荷分散してくれる。</p>\n<h2 id=\"6-スケーリング\" style=\"position:relative;\"><a href=\"#6-%E3%82%B9%E3%82%B1%E3%83%BC%E3%83%AA%E3%83%B3%E3%82%B0\" aria-label=\"6 スケーリング permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. スケーリング</h2>\n<p>オーケストレータは，以下のスケーリングの機能を持つ：</p>\n<ul>\n<li>インスタンスの追加による水平スケーリング</li>\n<li>インスタンスのマシンリソースの追加による垂直スケーリング</li>\n</ul>\n<p>:memo:</p>\n<ul>\n<li>スケールアップ、ダウンの際には、サービスのすべてのインスタンスが同一のクラスターノード上で分散されるようにしてはいけない。こうすると，停電時にサービス全体がダウンしてしまう。</li>\n<li>データセンターをまたいで分散するような高度な負荷分散も、オーケストレーターはできた方が良い。</li>\n</ul>\n<h2 id=\"7-自己復旧\" style=\"position:relative;\"><a href=\"#7-%E8%87%AA%E5%B7%B1%E5%BE%A9%E6%97%A7\" aria-label=\"7 自己復旧 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. 自己復旧</h2>\n<ul>\n<li>ノードが正常動作していないとき、他のノードにサービスインスタンスをスケジューリングする。</li>\n<li>アプリケーションが何を以って正常かという定義はオペレータや開発者にしかわからないので，開発者が定義した「アプリケーションの正常性」をHTTP GETなどで（オーケストレーターが）とれるようにしておくのが良い。</li>\n</ul>\n<h2 id=\"8-ダウンタイムゼロのデプロイメント\" style=\"position:relative;\"><a href=\"#8-%E3%83%80%E3%82%A6%E3%83%B3%E3%82%BF%E3%82%A4%E3%83%A0%E3%82%BC%E3%83%AD%E3%81%AE%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4%E3%83%A1%E3%83%B3%E3%83%88\" aria-label=\"8 ダウンタイムゼロのデプロイメント permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8. ダウンタイムゼロのデプロイメント</h2>\n<p>アップデートの方法には以下のようなものがある：</p>\n<ul>\n<li>ローリングアップデート：サービスを維持しながら、インスタンスを１つ１つ更新していく。</li>\n<li>カナリアリリース：トラフィックの１％だけ新しいサービスに流し、すべての正常性が確認されたら、１００％にする。</li>\n<li>ブルーグリーンデプロイメント：新しいバージョン（グリーン）を本番環境に置き、正常だったら、こっちにルーティングする。バグがあったら、古いバージョン（ブルー）にルーティングして、ロールバックする。</li>\n</ul>\n<h2 id=\"9-アフィニティと位置認識\" style=\"position:relative;\"><a href=\"#9-%E3%82%A2%E3%83%95%E3%82%A3%E3%83%8B%E3%83%86%E3%82%A3%E3%81%A8%E4%BD%8D%E7%BD%AE%E8%AA%8D%E8%AD%98\" aria-label=\"9 アフィニティと位置認識 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>9. アフィニティと位置認識</h2>\n<ul>\n<li>特定のノード上で専用ハードウェアが必要なサービスもある。その場合は、特定のサービスがそのノード上でしか動かないようにスケジュールできる。ただし、この場合も複数ノードを用意するなど冗長性を持たせないと、高可用性が損なわれる。</li>\n<li>一部のオーケストレーションエンジンは、位置認識もサポートしている。例えば、ノードに、そのデータセンターのラベル<code class=\"language-text\">west</code>、<code class=\"language-text\">center</code>、<code class=\"language-text\">east</code>をつけて、地理的に偏って発生する災害などの要因に対してロバストさを持たせられる。</li>\n</ul>\n<h2 id=\"10-セキュリティ\" style=\"position:relative;\"><a href=\"#10-%E3%82%BB%E3%82%AD%E3%83%A5%E3%83%AA%E3%83%86%E3%82%A3\" aria-label=\"10 セキュリティ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>10. セキュリティ</h2>\n<ul>\n<li>クラスタに参加するノードは、ノード識別情報が暗号化され、ノード間のすべての通信を暗号化する必要がある。そのために、ノードでは<strong>MTLS</strong>（Mutual Transport Layer Security）を使用する。</li>\n<li>クラスターのノードを相互に認証するには、証明書を利用する。証明書は、流出した場合のために、定期的に，あるいは要求に応じて自動的にローテーションされる。</li>\n</ul>\n<h2 id=\"11-ネットワークポリシー\" style=\"position:relative;\"><a href=\"#11-%E3%83%8D%E3%83%83%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF%E3%83%9D%E3%83%AA%E3%82%B7%E3%83%BC\" aria-label=\"11 ネットワークポリシー permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>11. ネットワークポリシー</h2>\n<ul>\n<li>互いに通信しないサービス同士は、ネットワーキングのサンドボックスで隔離した方が良い。ネットワークベースのサンドボックスは、SDN（Software Defined Network）を用いたり、ネットワークポリシーによってアクセス可能なリソース・不可能なリソースを制御することによって実現できる。</li>\n</ul>\n<h2 id=\"12-ロールベースのアクセス制御（rbac）\" style=\"position:relative;\"><a href=\"#12-%E3%83%AD%E3%83%BC%E3%83%AB%E3%83%99%E3%83%BC%E3%82%B9%E3%81%AE%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E5%88%B6%E5%BE%A1%EF%BC%88rbac%EF%BC%89\" aria-label=\"12 ロールベースのアクセス制御（rbac） permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>12. ロールベースのアクセス制御（RBAC）</h2>\n<p>例えば、開発、品質保証、プロダクト、などのユーザーグループを設定し、アクセス権を設定する。</p>\n<h2 id=\"13-機密情報\" style=\"position:relative;\"><a href=\"#13-%E6%A9%9F%E5%AF%86%E6%83%85%E5%A0%B1\" aria-label=\"13 機密情報 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>13. 機密情報</h2>\n<p>APIアクセストークンなどは、サービスのソースコードにハードコーディングしたり、外部構成ファイルに暗号化しないまま記述したらダメ。最近のオーケストレーターには、こうした機密情報を安全に処理してくれる「シークレット」機能があるので、これを使った方が良い。</p>\n<h2 id=\"14-コンテンツの信頼性\" style=\"position:relative;\"><a href=\"#14-%E3%82%B3%E3%83%B3%E3%83%86%E3%83%B3%E3%83%84%E3%81%AE%E4%BF%A1%E9%A0%BC%E6%80%A7\" aria-label=\"14 コンテンツの信頼性 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>14. コンテンツの信頼性</h2>\n<ul>\n<li>コンテナイメージが悪意のあるハッカーに改ざんされることもありうる。ソース側でイメージに署名し、ターゲット側で署名を検証することで、イメージが改ざんされていないことを保証できる。</li>\n</ul>\n<h2 id=\"15-イントロスペクション\" style=\"position:relative;\"><a href=\"#15-%E3%82%A4%E3%83%B3%E3%83%88%E3%83%AD%E3%82%B9%E3%83%9A%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3\" aria-label=\"15 イントロスペクション permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>15. イントロスペクション</h2>\n<ul>\n<li>人間が確認して分析できる必要があるものもある。CPU、メモリ、ディスクの使用料など。こうした情報を、利用しやすく、理解しやすい形式で重要な情報を提示する必要がある。</li>\n<li>ログにアクセスできるようにするために、適切な権限を持つユーザにはデバッグのために、各コンテナに対する<code class=\"language-text\">exec</code>アクセス権を付与する必要がある。</li>\n<li>理想的には、アプリケーションに対するリクエストを追跡し、それが完了するまでのログが分かる方が良い。</li>\n<li>オーケストレーターは、システムパラメータをグラフィカルに表現したダッシュボードを数種類提供すべき。</li>\n</ul>","frontmatter":{"title":"コンテナ・オーケストレータの話","date":"January 03, 2019"}}},"pageContext":{"slug":"/blog/orchesratoer/","previous":null,"next":{"fields":{"slug":"/blog/make-marks-on-the-world/"},"frontmatter":{"title":"インターネットに生きた証を残す","category":"dev","draft":false}}}}}